// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.2
// source: user_msg/v1/user_msg.proto

package v1

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AccountMsg_UserInfo_FullMethodName = "/account_msg.v1.account_msg/UserInfo"
)

// AccountMsgClient is the client API for AccountMsg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AccountMsgClient interface {
	UserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error)
}

type accountMsgClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountMsgClient(cc grpc.ClientConnInterface) AccountMsgClient {
	return &accountMsgClient{cc}
}

func (c *accountMsgClient) UserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserInfoRes)
	err := c.cc.Invoke(ctx, AccountMsg_UserInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountMsgServer is the server API for AccountMsg service.
// All implementations must embed UnimplementedAccountMsgServer
// for forward compatibility.
type AccountMsgServer interface {
	UserInfo(context.Context, *UserInfoReq) (*UserInfoRes, error)
	mustEmbedUnimplementedAccountMsgServer()
}

// UnimplementedAccountMsgServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAccountMsgServer struct{}

func (UnimplementedAccountMsgServer) UserInfo(context.Context, *UserInfoReq) (*UserInfoRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserInfo not implemented")
}
func (UnimplementedAccountMsgServer) mustEmbedUnimplementedAccountMsgServer() {}
func (UnimplementedAccountMsgServer) testEmbeddedByValue()                    {}

// UnsafeAccountMsgServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AccountMsgServer will
// result in compilation errors.
type UnsafeAccountMsgServer interface {
	mustEmbedUnimplementedAccountMsgServer()
}

func RegisterAccountMsgServer(s grpc.ServiceRegistrar, srv AccountMsgServer) {
	// If the following call pancis, it indicates UnimplementedAccountMsgServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AccountMsg_ServiceDesc, srv)
}

func _AccountMsg_UserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMsgServer).UserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AccountMsg_UserInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMsgServer).UserInfo(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

// AccountMsg_ServiceDesc is the grpc.ServiceDesc for AccountMsg service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AccountMsg_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "account_msg.v1.account_msg",
	HandlerType: (*AccountMsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserInfo",
			Handler:    _AccountMsg_UserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_msg/v1/user_msg.proto",
}
